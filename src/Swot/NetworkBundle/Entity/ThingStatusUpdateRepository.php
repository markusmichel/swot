<?php

namespace Swot\NetworkBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ThingStatusUpdateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ThingStatusUpdateRepository extends EntityRepository
{
    /**
     * Finds newsfeed for given user since given date
     * the user gets newsfeed from his things, friends public things and lent things
     * @param $user
     */
    public function findUserNewsfeedSince(User $user, \DateTime $since) {

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select("c")
            ->from("SwotNetworkBundle:ThingStatusUpdate", "c")
            ->join("c.thing", "a")
            ->leftJoin("a.rentals", "r")
            ->join("a.ownership", "o")
            ->join("o.owner", "u")
            ->leftJoin("u.friendships", "f")
            ->where("o.owner = :user")
            ->orWhere("r.thing = a AND r.userTo = :user")
            ->orWhere("a.accessType = 'public' AND (f.userWho = :user OR f.userWith = :user)")
            ->andWhere("c.sent > :since")
            ->orderBy("c.sent", "DESC")
            ->setParameter('since', $since)
            ->setParameter('user', $user)
        ;

        /** @var Newsfeed $newsfeed */
        $newsfeed = $qb->getQuery()->getResult();
        return $newsfeed;
    }

    /**
     * Finds all Status updates for a Thing since the given date.
     * The exact since Date is not included!
     *
     * @param Thing $thing
     * @param \DateTime $since
     * @return array
     */
    public function findUpdatesForThingSince(Thing $thing, \DateTime $since) {
        $query = $this->getEntityManager()->createQuery("
            SELECT u FROM SwotNetworkBundle:ThingStatusUpdate u
            WHERE u.thing = :thing
            AND u.sent > :since
            ORDER BY u.sent DESC
        ")
        ->setParameter("thing", $thing)
        ->setParameter("since", $since);

        return $query->getResult();
    }
}
