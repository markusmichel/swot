services:

    # Converter to json decoded response of thing (functions) to
    thing_function_response_converter:
        class:     Swot\NetworkBundle\Services\ThingResponseConverter
        arguments:
            - "@security.password_encoder"

    # thing authenticator
    thing_authenticator:
        class:     Swot\NetworkBundle\Security\ThingAuthenticator
        arguments: ["@thing_provider"]

    # thing provider
    thing_provider:
        class: Swot\NetworkBundle\Security\ThingProvider
        arguments: ["@swot.thing_repository"]

    # file uploaders
    swot.image_uploader:
        class:      Swot\NetworkBundle\File\ImageUploader
        arguments: [%kernel.root_dir%, %swot.directory.upload.profile_images%, @liip_imagine.data.manager, @liip_imagine.filter.manager]

    # repositories
    swot.user_repository:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.entity_manager
        factory_method: getRepository
        arguments:
            - Swot\NetworkBundle\Entity\User

    swot.thing_repository:
        class: Doctrine\ORM\EntityRepository
        factory_service: doctrine.orm.entity_manager
        factory_method: getRepository
        arguments:
            - Swot\NetworkBundle\Entity\Thing

    # Security Voters
    security.thing_voter:
        class:      Swot\NetworkBundle\Security\ThingVoter
        public:     false
        tags:
           - { name: security.voter }

    security.user_voter:
        class:      Swot\NetworkBundle\Security\UserVoter
        public:     false
        tags:
           - { name: security.voter }

    security.message_voter:
        class:      Swot\NetworkBundle\Security\MessageVoter
        public:     false
        tags:
           - { name: security.voter }

    security.rental_voter:
        class:      Swot\NetworkBundle\Security\RentalVoter
        public:     false
        tags:
            - { name: security.voter }

    # Register form types
    swot.form.type.user_settings:
        class:      Swot\NetworkBundle\Form\UserSettingsType
        tags:
           - { name: form.type, alias: user_settings }

    swot.form.type.new_message:
        class:      Swot\NetworkBundle\Form\NewMessageType
        arguments: [@swot.user_repository, @security.token_storage]
        tags:
           - { name: form.type, alias: new_message }

    swot.form.type.rental:
        class:      Swot\NetworkBundle\Form\RentalType
        arguments: [@swot.user_repository, @security.token_storage]
        tags:
           - { name: form.type, alias: rental }

    services.qr_reader:
        class: Swot\NetworkBundle\Services\QrReader
        arguments: [%kernel.root_dir%]

    services.curl_manager:
        class: Swot\NetworkBundle\Services\CurlManager
        arguments: []
