{# Shows all messages between the current user and one of his friends. #}

{% extends "::base.html.twig" %}
{% set partner_username = partner.username %}

{% block title %}
    {% trans with {'%username%': partner.username}%}conversation.page_title %username%{% endtrans %}
{% endblock %}

{% block body %}
    <div class="conversation-container">
        {# Render messages #}
        {{ render(controller("SwotNetworkBundle:Message:messagesInConversationSince", { id: conversation.id, since: 0 })) }}
    </div>
    <form action="{{ path('conversation', {id: conversation.id}) }}" method="post" {{ form_enctype(messageForm) }}>
        {{ form_widget(messageForm) }}

        <button type="submit">send</button>
    </form>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(function() {
            adjustHeight = function() {
                var container = $('.conversation-container');
                container
                        .css('max-height', $(window).height() - {{ gap_space }})
                        .scrollTop(container.prop('scrollHeight'));
            };

            adjustHeight();
            $( window ).resize(function() {
                adjustHeight();
            });

            (function() {
                /**
                 * Get timestamp of last received message and periodically check if there are new ones.
                 * Add new messages in first place.
                 */
                $messageContainer = $('.conversation-container');
                var getLastMessageDate = function() {
                    return parseInt($messageContainer.find('.message-sent').last().attr('data-timestamp'));
                };

                var timeout = {{ long_poll_intervall }};
                var url = "{{ path('messages_in_conversation_since', {id: conversation.id, since: '__since_placeholder__', _format: 'html' }) }}";
                var callback = function() {
                    var since = getLastMessageDate();
                    var replacedUrl = url.replace('__since_placeholder__', encodeURI(since.toString()));
                    $.get(replacedUrl, function(res) {
                        if(res !== "") {
                            $messageContainer.append(res);
                            adjustHeight();
                        }
                    });

                    setTimeout(callback, timeout);
                };
                callback();
            }());
        });
    </script>
{% endblock %}