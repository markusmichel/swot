{% extends "::base.html.twig" %}

{% block title %}SwotNetworkBundle:Frontend:newsfeed{% endblock %}

{% block headline %}
    <div class="profile-picture-container flex-row">
        <h1 class="profile-picture-title">
            {{ thing.name }}
        </h1>
        <div class="hex small flex-left">
            <img class="maskborder" src="{{ (profile_image_folder ~ thing.profileImage|default('thing-inverted.jpg')) | imagine_filter('profile_image_thumb_small') }}"/>
        </div>
        <div class="long-hex flex-center"></div>
        <div class="long-hex-after flex-right"></div>
    </div>
    <div class="thing-detail meta-info">
        <div>{% trans %}common.registered_since{% endtrans %}: {{ thing.ownerSince.date|date("Y-m-d") }}</div>
        {% if thing.ownership.owner == app.user %}<div>{% trans %}thing.owner_since{% endtrans %}: {{ thing.ownership.since.date|date("Y-m-d") }}</div>{% endif %}
    </div>
    <ul class="button-top-bar">
        {% if thing.functions|length > 0 %}
            <li>
                <a data-dropdown="function-drop" data-options="is_hover:true;align:bottom" class="button secondary" style="font-weight: bold;" aria-controls="function-drop" aria-expanded="false">{% trans %}thing.functions{% endtrans %}</a>
                <ul id="function-drop" class="medium f-dropdown" data-dropdown-content aria-hidden="true" tabindex="-1">
                    {% for function in thing.functions %}
                        <li><a href="#" data-reveal-id="modal-function-{{ function.id }}">{{ function.name }}</a></li>
                        {% include 'SwotNetworkBundle:Thing:functionModal.html.twig' with {function: function} %}
                    {% endfor %}
                </ul>
            </li>
        {% else %}
            <li><div class="button-like secondary">No functions</div>
        {% endif %}

        {% if is_granted('admin', thing) %}
            <li><a href="{{ path('thing_settings', {id: thing.id}) }}" class="button primary">Settings</a></li>
            <li>{{ form(delete_form) }}</li>
            <li><a href="{{ path('thing_lend', {id: thing.id}) }}" class="button primary">Lend</a></li>
        {% endif %}
    </ul>
{% endblock %}

{% block body %}
    {% if thing.ownership.owner != app.user %}
        <a href="{{ path('friend_show', {id: thing.ownership.owner.id}) }}">
            <div class="hex tiny"><img class="maskborder" src="{{ (profile_image_folder ~ thing.ownership.owner.profileImage|default('person-inverted.jpg')) | imagine_filter('profile_image_thumb_tiny') }}"/></div>
            <div class="thing-owner-name">{% trans %}thing.owner{% endtrans %}: {{ thing.ownership.owner.username }}</div>
        </a>
    {% endif %}
    {% if thing.description|length > 0 %}
        <div class="thing-desc">
            "{{ thing.description }}"
        </div>
    {% endif %}

    <div class="attributes">
        <div class="category">{{ status.device.classification }}</div>
        <div class="access">{{ thing.accessType }}</div>
    </div>

    <div id="confirmationModal" class="reveal-modal" data-reveal aria-labelledby="modalTitle" aria-hidden="true" role="dialog">
        <p class="lead" >{% trans %}confirmation_question{% endtrans %}</p>
        <button id="confirmDeleteBtn" class="alert">Accept</button>
        <button id="closeModalBtn">Decline</button>
        <a class="close-reveal-modal" aria-label="Close">&#215;</a>
    </div>

    <div ng-app="swotApp">
        <div ng-controller="ThingInformationController as ctrl">
            {# Angular code --> verbatim --> don't render with Twig #}
            {% verbatim %}
                <div ng-repeat="f in ctrl.data">
                    <div>{{ f.title }}</div>

                    <div ng-switch="f.type">

                        <!-- Percentage type -->
                        <div ng-switch-when="percentage">
                            <div class="progress">
                                <span class="meter" ng-style="{ width: f.value + '%' }"></span>
                            </div>
                        </div>

                        <!-- Table type -->
                        <div ng-switch-when="table">
                            <table>
                                <thead>
                                    <th ng-repeat="header in f.value.header">{{ header }}</th>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="row in f.value.data">
                                        <td ng-repeat="val in row">{{ val }}</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <!-- HTML type -->
                        <div ng-switch-when="html">
                            HTML
                            <div ng-bind-html="f.value | safe"></div>
                        </div>

                        <!-- Boolean type -->
                        <div ng-switch-when="boolean">
                            <div ng-switch="f.value">
                                <div ng-switch-when="true" class="label round radius success">yes</div>
                                <div ng-switch-when="false" class="label round radius alert">no</div>
                            </div>
                        </div>

                        <!-- Default type = plain text -->
                        <div ng-switch-default>
                            {{ f.value }}
                        </div>
                    </div>
                    <hr/>

                </div>
            {% endverbatim %}

        </div>

    </div>

    {% if messages|length > 0 %}
        <h2>{% trans %}thing.newsfeed{% endtrans %}</h2>
        <div id="messages">
            {{ include("SwotNetworkBundle:Thing:thing_messages.html.twig", {messages: messages}) }}
        </div>
    {% else %}<h2>{% trans %}thing.no_newsfeed{% endtrans %}</h2>
    {% endif %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(function() {
            (function() {
                /*
                * handles delete confirmation modal
                */
                var flag = true;
                $('form').submit(function() {
                    if ($(this).attr('action').indexOf('delete') < 0) return true;

                    if (flag) $('#confirmationModal').foundation('reveal', 'open');
                    else return true;

                    return false;
                });

                $('#confirmDeleteBtn').click(function() {
                    flag = false;
                    $('form').submit();
                });
                $('#closeModalBtn').click(function() {
                    $('#confirmationModal').foundation('reveal', 'close');
                });

                /**
                 * Get timestamp of last received message and periodically check if there are new ones.
                 * Also checks for information updates
                 * Add new messages in first place.
                 */
                var $messageContainer = $('#messages');

                var getLastMessageDate = function() {
                    var since = parseInt($messageContainer.find('.message-sent').first().attr('data-timestamp'));
                    if(isNaN(since)) since = 0;
                    return since;
                };

                var timeout = {{ long_poll_intervall }};
                var url = "{{ path('thing_update_messages_since', {id: thing.id, since: '__since_placeholder__', _format: 'html' }) }}";
                var callback = function() {
                    var since = getLastMessageDate();
                    var replacedUrl = url.replace('__since_placeholder__', encodeURI(since.toString()));
                    $.get(replacedUrl, function(res) {
                        if(res !== "") {
                            $messageContainer.prepend(res);
                        }
                        setTimeout(callback, timeout);
                    });

                    // @todo: call callback in $.get callback to prevent calling the same url multiple time in a short time
                    // @todo: call this code in angular?
                };
                callback();
            }());
        });
    </script>

    <script>
        // @todo: interval / Skala / Rating

        angular.module('swotApp', [])
            .filter("safe", function($sce) {
                return function(input) {
                    return $sce.trustAsHtml(input);
                }
            })
            .directive("ngRaw", function($sce) {
                return function(scope, element, attr) {
                    scope.$watch($sce.parseAsHtml($sce.trustAsHtml(attr.ngRaw)), function(value) {
                        element.html(value || '');
                    });
                };
            })
            .controller('ThingInformationController', function($interval, $http, $timeout) {
                    var status = this;
                    var url = "{{ path('thing_information', {id: thing.id}) }}";
                    var interval = {{ long_poll_intervall }};
                    status.data = JSON.parse('{{ thing.information | raw }}').status;
                    var cb = function() {
                        $http.get(url)
                        .success(function(res) {
                            status.data = res.status;
//                            angular.copy(res.status, todoList.fixture);

                            $timeout(cb, interval);
                        })
                    };
                    cb();
            });
    </script>
{% endblock %}
