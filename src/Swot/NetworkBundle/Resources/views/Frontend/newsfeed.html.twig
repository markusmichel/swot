{# Index page when logged in #}

{% extends "::base.html.twig" %}

{% block title %}SwotNetworkBundle:Frontend:newsfeed{% endblock %}

{% block body %}
    <h2 id="newsHeadline">{% trans %}thing.newsfeed{% endtrans %}</h2>
    <h2 id="noNewsHeadline">{% trans %}thing.no_newsfeed{% endtrans %}</h2>
    <div id="newsfeed">
        {{ render(controller("SwotNetworkBundle:Frontend:newsfeedSince", { since: 0 })) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(function() {
            (function() {
                /**
                 * Shows no newsfeed headline if there are no news
                 */
                $('#noNewsHeadline').hide();
                var switchHeadline = function() {
                    if ($('#newsfeed').children().length > 0) {
                        $('#newsHeadline').show();
                        $('#noNewsHeadline').hide();
                    } else {
                        $('#newsHeadline').hide();
                        $('#noNewsHeadline').show();
                    }
                };

                /**
                 * Get timestamp of last received message and periodically check if there are new ones.
                 * Add new messages in first place.
                 */
                var $messageContainer = $('#newsfeed');
                var getLastMessageDate = function() {
                    var since = parseInt($messageContainer.find('.newsitem-sent').first().attr('data-timestamp'));
                    if(isNaN(since)) since = 0;
                    return since;
                };

                var timeout = {{ long_poll_intervall }};
                var url = "{{ path('newsfeed_since', {since: '__since_placeholder__', _format: 'html' }) }}";
                var callback = function() {
                    var since = getLastMessageDate();

                    var replacedUrl = url.replace('__since_placeholder__', encodeURI(since.toString()));
                    $.get(replacedUrl, function(res) {
                        switchHeadline();
                        if(res !== "") {
                            $messageContainer.prepend(res);
                        }
                        setTimeout(callback, timeout);
                    });

                };
               callback();
            }())
        });
    </script>
{% endblock %}

